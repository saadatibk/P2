{
  "title": "Simple Language Interpreter",
  "description": "A simple interpreter for a custom programming language with basic arithmetic, variable assignment, conditional statements, and print functionality.",
  "table_of_contents": [
    "Introduction",
    "Features",
    "Installation",
    "Usage",
    "BNF Grammar",
    "Examples",
    "Contributing",
    "License"
  ],
  "introduction": "This project is an implementation of an interpreter for a simple programming language. The interpreter can handle basic arithmetic operations, variable assignments, conditional statements (if-else), and print statements.",
  "features": [
    "Arithmetic operations: +, -, *, /, >, <",
    "Variable declarations and assignments",
    "Conditional statements (if-else)",
    "Print statements"
  ],
  "installation": [
    "To run the interpreter, you need to have Java installed on your system. Follow these steps to set up the project:",
    "1. Clone the repository:",
    "```bash",
    "git clone https://github.com/yourusername/simple-language-interpreter.git",
    "cd simple-language-interpreter",
    "```",
    "2. Compile the Java files:",
    "```bash",
    "javac -d bin src/*.java",
    "```",
    "3. Run the interpreter:",
    "```bash",
    "java -cp bin Interpreter",
    "```"
  ],
  "usage": [
    "1. Create a new file with your program code, for example, `program.txt`.",
    "2. Run the interpreter and pass your program file as an argument:",
    "```bash",
    "java -cp bin Interpreter program.txt",
    "```"
  ],
  "bnf_grammar": [
    "<program> ::= <statement> | <statement> <program>",
    "<statement> ::= <assignment> \";\" ",
    "              | <expression> \";\" ",
    "              | <if-statement>",
    "              | <print-statement> \";\"",
    "<assignment> ::= \"var\" <identifier> \"=\" <expression>",
    "<if-statement> ::= \"if\" \"(\" <expression> \")\" \"{\" <statement-list> \"}\" <else-clause>?",
    "<else-clause> ::= \"else\" \"{\" <statement-list> \"}\"",
    "<statement-list> ::= <statement> | <statement> <statement-list>",
    "<print-statement> ::= \"print\" <identifier>",
    "<expression> ::= <term> ",
    "               | <term> \"+\" <expression> ",
    "               | <term> \"-\" <expression>",
    "               | <term> \">\" <expression>",
    "               | <term> \"<\" <expression>",
    "<term> ::= <factor> ",
    "         | <factor> \"*\" <term> ",
    "         | <factor> \"/\" <term>",
    "<factor> ::= <number> ",
    "           | <identifier> ",
    "           | \"(\" <expression> \")\"",
    "<identifier> ::= <letter> | <letter> <identifier>",
    "<number> ::= <digit> | <digit> <number>",
    "<letter> ::= \"a\" | \"b\" | \"c\" | ... | \"x\" | \"y\" | \"z\" ",
    "           | \"A\" | \"B\" | \"C\" | ... | \"X\" | \"Y\" | \"Z\"",
    "<digit> ::= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\""
  ],
  "examples": {
    "example_program": [
      "var x = 10;",
      "print x;",
      "if (x > 5) {",
      "    print x;",
      "} else {",
      "    var y = 5;",
      "    print y;",
      "}"
    ],
    "running_the_example": [
      "1. Save the above program to a file named `example.txt`.",
      "2. Run the interpreter:",
      "```bash",
      "java -cp bin Interpreter example.txt",
      "```"
    ]
  },
  "contributing": "Contributions are welcome! Please open an issue or submit a pull request for any changes you would like to make.",
  "license": "This project is licensed under the MIT License. See the LICENSE file for details."
}

